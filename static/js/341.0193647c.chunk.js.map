{"version":3,"file":"static/js/341.0193647c.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","services/moviesApi.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","views/MovieDetailsPage.js"],"sourcesContent":["import { TailSpin } from  'react-loader-spinner'\n\nconst Loader =()=>{\n    return(\n        <TailSpin\n      heigth=\"100\"\n      width=\"100\"\n      color='grey'\n      ariaLabel='loading'\n    />\n    )\n}\n\nexport default Loader;","\n//import axios from 'axios';\nconst BASE_URL =\"https://api.themoviedb.org/3/\"\nconst API_KEY=\"0dc1b7672e27ccf3c49c2486e3f06114\";\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  console.log(url)\n    const response = await fetch(url, config);\n    return response.ok\n      ? await response.json()\n      : Promise.reject(new Error('Not found'));\n  }\n  \n  export function fetchTrending() {\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  }\n\n  \n  export function fetchSearchMovie(searchQuery) {\n   console.log(searchQuery)\n   return fetchWithErrorHandling(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`);\n    \n  }\n\n\n export function fetchMovieById(movieId) {\n  console.log(movieId)\n  return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n }\n  \n  export function fetchActors(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  }\n\n  export function fetchReviews(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  }\n\n  \n  ","import styled from 'styled-components';\nimport {NavLink } from \"react-router-dom\"\n\n\nexport const ButtonCard=styled.button`\nbackground-color: #E6E6FA;\n \n    padding-top: 10px;\n    padding-right: 30px;\n    padding-bottom: 10px;\n    padding-left: 30px;\n    border-radius: 4px;\n    border: none;\n    margin-bottom: 10px;\n    cursor: pointer;\n}`\n\nexport const ImageCard =styled.img`margin-right: 32px;\nmargin-bottom: 0;\nmin-width: 240px;\nborder-radius: 5px;`\n\nexport const CardContainer=styled.div`\ndisplay: flex;\n  padding-bottom: 10px;\n  border-bottom: 3px double #D8BFD8;\n`\nexport const CardDescription=styled.div`\npadding-left: 20px;`\n\nexport const Genres =styled.p`\n    font-weight: 700;\n    font-size: 17px;\n    margin-bottom: 10px;\n  `\n  \n  export const GenresName=styled.span`\n  &:not(:last-child) {\n    margin-right: 10px;}\n  `\n\n\n  export const AddList=styled.ul`\n  border-bottom: 3px double #D8BFD8;\n  padding-bottom:10px\n  &:focus,\n  &:hover{\n  color: #D8BFD8;}\n  `\n  export const Link=styled(NavLink)`\n\n&.active,\n&:hover {\n    color: #D8BFD8;}\n`\n","import PropTypes from 'prop-types';\nimport {ImageCard,CardContainer,CardDescription,Genres,GenresName} from \"./MovieCard.styled\"\n\n function MovieCard({movie}){\n    const {poster_path,\n      original_title,\n        title,\n        release_date,\n        vote_average,\n        overview,\n        genres\n      } = movie;\n\nreturn(\n   \n  <CardContainer>\n  <ImageCard src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n    alt={original_title}\n  />\n\n  <CardDescription>\n  <h2>{title} {release_date ? <>({release_date.slice(0, 4)})</> : ''}</h2>\n  <p>User score:{vote_average}</p>\n  <h3>Overview</h3>\n  <p>{overview}</p>\n  <h4>Genres</h4>\n  <Genres>{genres&&\n  genres.map(({ id, name }) => (\n        <GenresName key={id}>{name}</GenresName>\n      ))}\n    </Genres>\n    </CardDescription>\n\n  </CardContainer>\n   \n)\n    }\n\n     export default MovieCard;\n\n     MovieCard.propTypes = {\n      movie: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        vote_average: PropTypes.number,\n        overview: PropTypes.string,\n        genres: PropTypes.array,\n      }).isRequired,\n    };","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport {fetchMovieById} from \"../services/moviesApi\"\nimport { Outlet } from 'react-router-dom';\nimport Loader from '../components/Loader/Loader';\nimport { ButtonCard,AddList,Link } from '../components/MovieCard/MovieCard.styled';\n\n\n\nconst MovieDetailsPage =()=>{\n    let { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const [status, setStatus] = useState(\"idle\")\n    const location =useLocation();\n    const navigate=useNavigate();\n    const from = location?.state?.from ?? '/';\n\n    useEffect(() => {\n\n      setStatus(\"pending\")\n        fetchMovieById(movieId)\n          .then(movie=>{\n            setMovie(movie)\n          },\n            setStatus(\"resolved\")\n         \n          )\n          .catch(error => { console.log(error);\n          setStatus(\"rejected\")\n      }) }, [movieId]);\n\n  \n    return ( \n <>\n  {status ===\"pending\"&& (\n      <Loader/>\n    )}\n    {status===\"resolved\" && (\n      <>\n        <ButtonCard type=\"button\" onClick={()=>{navigate(from)}}>Go back</ButtonCard>\n      \n           <MovieCard movie={movie}/>\n          \n\n<AddList>\n          Additional information\n          <li>\n            <Link to=\"cast\" state={{ from: location?.state?.from ?? \"/\" }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"review\" state={{ from: location?.state?.from ?? \"/\" }}>\n              Reviews\n            </Link>\n          </li>\n        </AddList>\n\n        <Outlet/>\n        </>\n    )}\n{status ===\"rejected\" && <h1>Oppps,something's gone wrong</h1>}\n     </>\n    )\n}\n \n\n  export default MovieDetailsPage;\n\n"],"names":["heigth","width","color","ariaLabel","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","console","log","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearchMovie","searchQuery","fetchMovieById","movieId","fetchActors","fetchReviews","ButtonCard","styled","ImageCard","CardContainer","CardDescription","Genres","GenresName","AddList","Link","NavLink","movie","poster_path","original_title","title","release_date","vote_average","overview","genres","src","alt","slice","map","id","name","useParams","useState","setMovie","status","setStatus","location","useLocation","navigate","useNavigate","from","state","useEffect","then","catch","error","Loader","type","onClick","to"],"sourceRoot":""}